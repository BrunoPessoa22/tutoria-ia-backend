"""
Proactive AI Tutor - Structured 45-minute lessons based on Cultura Builder
"""
from fastapi import APIRouter, HTTPException
from pydantic import BaseModel
from typing import Optional, List, Dict, Literal
import anthropic
import os
import logging
from dotenv import load_dotenv
import json
from datetime import datetime

load_dotenv()

router = APIRouter()
logger = logging.getLogger(__name__)


class LessonState(BaseModel):
    module_id: int
    lesson_id: int
    section_index: int = 0  # Track which section of the lesson we're in
    elapsed_time: int = 0  # Minutes elapsed in lesson
    stage: Literal["intro", "section1", "section2", "section3", "practice", "review", "closing"]
    student_responses: List[str] = []
    interaction_count: int = 0  # Track interactions for pacing
    awaiting_response: bool = False


class StudentInput(BaseModel):
    message: str
    lesson_state: LessonState
    is_voice: bool = True


class TeacherResponse(BaseModel):
    message: str
    action_type: Literal["lecture", "interactive", "practice", "review", "closing"]
    expects_response: bool
    next_stage: Optional[str] = None
    lesson_progress: float
    estimated_time_remaining: int  # Minutes remaining
    section_title: Optional[str] = None


# Structured 45-minute lesson plan based on Cultura Builder manuscript
LESSON_PLAN = {
    "1": {  # Lesson 1: IntroduÃ§Ã£o ao Mundo dos Builders
        "title": "Bem-vindo ao Cultura Builder: Sua Jornada ComeÃ§a Aqui",
        "duration": 45,  # minutes
        "sections": [
            {
                "stage": "intro",
                "duration": 5,
                "title": "Abertura e Boas-vindas",
                "content": """OlÃ¡! Eu sou sua professora de IA e estou muito animada para nossa primeira aula!

                Nos prÃ³ximos 45 minutos, vamos explorar o fascinante mundo dos Builders - pessoas como vocÃª que estÃ£o usando IA para transformar suas vidas e carreiras.

                VocÃª sabia que mais de 3.500 brasileiros jÃ¡ se tornaram Builders? Hoje vocÃª comeÃ§a sua jornada!

                Vamos comeÃ§ar com uma pergunta simples: O que te trouxe aqui hoje? O que vocÃª espera aprender?""",
                "interactive": True
            },
            {
                "stage": "section1",
                "duration": 10,
                "title": "O Impacto da IA no Trabalho Brasileiro",
                "content": """Agora vou compartilhar algo importante: a IA nÃ£o estÃ¡ vindo para roubar empregos, estÃ¡ vindo para amplificar suas capacidades!

                Veja o caso da Lu, do Magazine Luiza. Ela Ã© uma IA que atende milhÃµes de clientes, mas nÃ£o substituiu vendedores - ela os liberou para tarefas mais estratÃ©gicas e humanas.

                No Brasil, temos vantagens Ãºnicas:
                1. Nossa criatividade e "jeitinho brasileiro" - impossÃ­vel de automatizar
                2. Nossa diversidade cultural - nos torna adaptÃ¡veis
                3. Nossa capacidade de conexÃ£o humana - sempre serÃ¡ necessÃ¡ria

                Pense comigo: se vocÃª pudesse ter um assistente super inteligente trabalhando com vocÃª 24/7, o que vocÃª faria diferente?""",
                "interactive": True
            },
            {
                "stage": "section2",
                "duration": 10,
                "title": "O que Ã© ser um Builder?",
                "content": """Builder nÃ£o Ã© programador. Builder Ã© alguÃ©m que constrÃ³i soluÃ§Ãµes usando as ferramentas disponÃ­veis.

                Deixe eu contar a histÃ³ria do JoÃ£o, um contador de SÃ£o Paulo. Ele usou IA para automatizar relatÃ³rios que levavam 3 dias para fazer. Agora faz em 30 minutos. Com o tempo livre, criou uma consultoria e triplicou sua renda.

                Ou a Maria, professora de inglÃªs no interior de Minas. Criou um assistente de IA para corrigir redaÃ§Ãµes. Hoje atende 10x mais alunos online.

                Builders tÃªm 3 caracterÃ­sticas:
                1. Curiosidade - sempre perguntam "e se...?"
                2. Coragem - nÃ£o tÃªm medo de experimentar
                3. Comunidade - aprendem e ensinam outros

                Qual dessas caracterÃ­sticas vocÃª jÃ¡ tem? E qual precisa desenvolver?""",
                "interactive": True
            },
            {
                "stage": "section3",
                "duration": 10,
                "title": "IA Generativa: Seu Novo Superpoder",
                "content": """Agora o mais empolgante: IA Generativa Ã© como ter uma equipe inteira no seu computador!

                Imagine:
                - Um designer que cria logos em segundos
                - Um escritor que nunca tem bloqueio criativo
                - Um programador que codifica suas ideias
                - Um tradutor fluente em 100 idiomas

                Tudo isso estÃ¡ disponÃ­vel AGORA, para VOCÃŠ!

                ChatGPT, Claude, Gemini - sÃ£o ferramentas que qualquer pessoa pode usar. NÃ£o precisa ser tÃ©cnico!

                Vou dar um exemplo prÃ¡tico: um restaurante aqui de SÃ£o Paulo usou IA para criar todo seu cardÃ¡pio, incluindo descriÃ§Ãµes e fotos. Economizou R$ 15.000 em design.

                Que problema do seu dia a dia vocÃª gostaria de resolver com IA?""",
                "interactive": True
            },
            {
                "stage": "practice",
                "duration": 8,
                "title": "ExercÃ­cio PrÃ¡tico: Sua Primeira InteraÃ§Ã£o com IA",
                "content": """Hora de colocar a mÃ£o na massa! Vamos fazer um exercÃ­cio juntos.

                Quero que vocÃª imagine um problema real que vocÃª tem. Pode ser pessoal ou profissional.

                Agora vamos estruturar como pedir ajuda para uma IA resolver isso:

                1. Defina o problema claramente
                2. Diga o resultado desejado
                3. DÃª contexto relevante

                Por exemplo: "Preciso criar posts para Instagram sobre culinÃ¡ria vegana. Quero 5 ideias criativas para a semana, com textos curtos e sugestÃµes de hashtags."

                Agora Ã© sua vez! Me conta seu problema e vamos estruturar juntos a melhor forma de resolvÃª-lo com IA.""",
                "interactive": True
            },
            {
                "stage": "review",
                "duration": 5,
                "title": "RevisÃ£o e Aprendizados",
                "content": """Excelente trabalho! Vamos revisar o que aprendemos hoje:

                âœ“ IA Ã© ferramenta de ampliaÃ§Ã£o, nÃ£o substituiÃ§Ã£o
                âœ“ Brasil tem vantagens competitivas Ãºnicas
                âœ“ Ser Builder Ã© sobre resolver problemas, nÃ£o programar
                âœ“ IA Generativa jÃ¡ estÃ¡ acessÃ­vel para todos

                VocÃª deu o primeiro passo importante hoje. De 0 a 10, como vocÃª avalia seu entendimento sobre o potencial da IA agora?

                Baseado no que aprendemos, qual serÃ¡ sua primeira aÃ§Ã£o prÃ¡tica depois desta aula?""",
                "interactive": True
            },
            {
                "stage": "closing",
                "duration": 2,
                "title": "Encerramento e PrÃ³ximos Passos",
                "content": """ParabÃ©ns por completar sua primeira aula do Cultura Builder! ðŸŽ‰

                VocÃª jÃ¡ faz parte de uma comunidade de mais de 3.500 Builders brasileiros!

                Sua tarefa para casa:
                1. Crie uma conta gratuita no ChatGPT ou Claude
                2. FaÃ§a 3 perguntas diferentes para a IA
                3. Anote uma ideia de como usar IA no seu trabalho

                Na prÃ³xima aula, vamos aprofundar em "Prompt Engineering" - a arte de conversar com IA para obter resultados incrÃ­veis!

                Lembre-se: VocÃª nÃ£o estÃ¡ aprendendo apenas sobre IA, estÃ¡ construindo seu futuro!

                AtÃ© a prÃ³xima aula! Continue curioso e continue construindo! ðŸš€""",
                "interactive": False
            }
        ]
    }
}


@router.post("/lead-class")
async def lead_class(student_input: StudentInput) -> TeacherResponse:
    """
    Delivers a structured 45-minute lesson based on Cultura Builder content
    """

    # Get the lesson plan
    lesson = LESSON_PLAN.get(str(student_input.lesson_state.lesson_id), LESSON_PLAN["1"])

    # Get current section based on stage
    current_section = None
    for section in lesson["sections"]:
        if section["stage"] == student_input.lesson_state.stage:
            current_section = section
            break

    if not current_section:
        current_section = lesson["sections"][0]

    # Calculate time remaining
    elapsed = student_input.lesson_state.elapsed_time
    time_remaining = lesson["duration"] - elapsed

    # Calculate lesson progress
    stage_to_progress = {
        "intro": 0.1,
        "section1": 0.25,
        "section2": 0.45,
        "section3": 0.65,
        "practice": 0.80,
        "review": 0.90,
        "closing": 1.0
    }
    progress = stage_to_progress.get(student_input.lesson_state.stage, 0.5)

    # Determine action type based on stage
    action_type_map = {
        "intro": "lecture",
        "section1": "interactive",
        "section2": "interactive",
        "section3": "interactive",
        "practice": "practice",
        "review": "review",
        "closing": "closing"
    }
    action_type = action_type_map.get(student_input.lesson_state.stage, "lecture")

    # If it's the first interaction in this section, deliver the content directly
    if student_input.lesson_state.interaction_count == 0 or not student_input.lesson_state.awaiting_response:
        teacher_message = current_section["content"]
        expects_response = current_section.get("interactive", False)
    else:
        # Use Claude to respond to student and continue the lesson
        api_key = os.getenv("ANTHROPIC_API_KEY")
        if not api_key:
            teacher_message = f"Muito bem! {current_section['content']}"
            expects_response = current_section.get("interactive", False)
        else:
            try:
                client = anthropic.Anthropic(api_key=api_key)

                system_prompt = f"""VocÃª Ã© uma professora experiente do Cultura Builder ministrando uma aula estruturada.

                SeÃ§Ã£o atual: {current_section['title']}
                Tempo de aula decorrido: {elapsed} minutos de 45 minutos

                IMPORTANTE:
                1. VocÃª estÃ¡ MINISTRANDO uma aula, nÃ£o apenas conversando
                2. Mantenha o foco no conteÃºdo da seÃ§Ã£o atual
                3. Responda brevemente ao aluno e CONTINUE com o conteÃºdo da aula
                4. Use exemplos prÃ¡ticos brasileiros
                5. Mantenha o ritmo - temos {time_remaining} minutos restantes
                6. Seja calorosa mas profissional

                ConteÃºdo desta seÃ§Ã£o que vocÃª deve cobrir:
                {current_section['content']}
                """

                messages = [{"role": "user", "content": f"Resposta do aluno: {student_input.message}"}]

                response = client.messages.create(
                    model="claude-3-haiku-20240307",
                    max_tokens=400,
                    temperature=0.7,
                    system=system_prompt,
                    messages=messages
                )

                teacher_message = response.content[0].text
                expects_response = current_section.get("interactive", False)

            except Exception as e:
                logger.error(f"Error getting Claude response: {e}")
                teacher_message = f"Excelente resposta! {current_section['content']}"
                expects_response = current_section.get("interactive", False)

    # Determine next stage
    stage_order = ["intro", "section1", "section2", "section3", "practice", "review", "closing"]
    current_index = stage_order.index(student_input.lesson_state.stage)
    next_stage = stage_order[current_index + 1] if current_index < len(stage_order) - 1 else None

    return TeacherResponse(
        message=teacher_message,
        action_type=action_type,
        expects_response=expects_response,
        next_stage=next_stage,
        lesson_progress=progress,
        estimated_time_remaining=time_remaining,
        section_title=current_section["title"]
    )


@router.post("/start-lesson")
async def start_lesson(module_id: int = 1, lesson_id: int = 1) -> TeacherResponse:
    """
    Start a structured 45-minute lesson
    """
    lesson = LESSON_PLAN.get(str(lesson_id), LESSON_PLAN["1"])
    intro_section = lesson["sections"][0]

    return TeacherResponse(
        message=intro_section["content"],
        action_type="lecture",
        expects_response=intro_section.get("interactive", True),
        next_stage="section1",
        lesson_progress=0.0,
        estimated_time_remaining=45,
        section_title=intro_section["title"]
    )